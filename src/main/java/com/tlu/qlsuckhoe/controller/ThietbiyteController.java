/*
 * Created on 2018-10-01 ( Date ISO 2018-10-01 - Time 22:38:43 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.tlu.qlsuckhoe.controller;

import com.tlu.qlsuckhoe.entity.Thietbiyte;
import com.tlu.qlsuckhoe.service.ThietbiyteServiceImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@CrossOrigin(origins = "*")
@RequestMapping(value = "/thietbiyte", produces = "application/hal+json")
public class ThietbiyteController {

	private static final Logger LOGGER = LoggerFactory.getLogger(ThietbiyteController.class);

	private static final String NOT_FOUND ="Thietbiyte not found";

	@Autowired
	private ThietbiyteServiceImpl thietbiyteService;

	@RequestMapping(value = "/",
			produces = {MediaType.APPLICATION_JSON_VALUE})
	public List<Thietbiyte> findAll() {
		List<Thietbiyte> list = thietbiyteService.findAll();
		return list;
	}


	@GetMapping("{idthietbiyte}")
	public Thietbiyte get(@PathVariable("idthietbiyte") Integer idthietbiyte) {
		final Thietbiyte thietbiyte = thietbiyteService.getOne(idthietbiyte);
		LOGGER.info("Thietbiyte found : {}", thietbiyte);
		return thietbiyte;
	}

	@PostMapping(consumes = "application/json")
	public Thietbiyte create(@RequestBody Thietbiyte thietbiyte) {
		LOGGER.info("Thietbiyte creation request : {}", thietbiyte);
		if (thietbiyteService.exist(thietbiyte)) {
			LOGGER.info("Thietbiyte already exist ! : {}", thietbiyte);
			return null;
		} else {
			final Thietbiyte created = thietbiyteService.create(thietbiyte);
			LOGGER.info("Created thietbiyte {}", created);
			return created;
		}
	}

	@PutMapping(value = "{idthietbiyte}", consumes = "application/json")
	public Thietbiyte update(@PathVariable("idthietbiyte") Integer idthietbiyte, @RequestBody Thietbiyte thietbiyte) {
		return thietbiyteService.update(thietbiyte);
	}

	@DeleteMapping("{idthietbiyte}")
	public void delete(@PathVariable("idthietbiyte") Integer idthietbiyte) {
		LOGGER.info("Thietbiyte deletion request : {}", resolveIdForLogger(idthietbiyte));
		if (thietbiyteService.delete(idthietbiyte)) {
			LOGGER.info("Thietbiyte succesfully deleted");
		} else {
			LOGGER.info(NOT_FOUND);
		}
	}

	private String resolveIdForLogger(Integer idthietbiyte) {
		final StringBuilder ids = new StringBuilder();
		ids.append(String.valueOf(idthietbiyte));
		return ids.toString();
	}

}

